openapi: "3.0.1"
info:
  title: "bookings"
  description: "endpoint into booking service"
  version: "2025-04-27T06:16:36Z"
servers:
- url: "https://0g33mzzhqg.execute-api.eu-north-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "default"
paths:
  /bookings/{booking_id}:
    get:
      parameters:
      - name: "booking_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-request-validator: "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:666568604567:function:se-project-part2-get_booking_by_id/invocations"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.booking_id: "method.request.path.booking_id"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"booking_id\"\
            : \"$input.params('booking_id')\"\n}"
        passthroughBehavior: "when_no_templates"
        timeoutInMillis: 10000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /bookings:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:666568604567:function:se-project-part2-get_all_bookings/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 10000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:666568604567:function:se-project-part2-create_bookings/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 10000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
x-amazon-apigateway-request-validators:
  Validate query string parameters and headers:
    validateRequestParameters: true
    validateRequestBody: false
